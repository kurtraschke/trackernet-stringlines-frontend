/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as StringlineIndexImport } from './routes/stringline.index'
import { Route as StringlineConfigYesterdayImport } from './routes/stringline.$config.yesterday'
import { Route as StringlineConfigTodayImport } from './routes/stringline.$config.today'
import { Route as StringlineConfigTrafficDayImport } from './routes/stringline.$config.$trafficDay'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StringlineIndexRoute = StringlineIndexImport.update({
  id: '/stringline/',
  path: '/stringline/',
  getParentRoute: () => rootRoute,
} as any)

const StringlineConfigYesterdayRoute = StringlineConfigYesterdayImport.update({
  id: '/stringline/$config/yesterday',
  path: '/stringline/$config/yesterday',
  getParentRoute: () => rootRoute,
} as any)

const StringlineConfigTodayRoute = StringlineConfigTodayImport.update({
  id: '/stringline/$config/today',
  path: '/stringline/$config/today',
  getParentRoute: () => rootRoute,
} as any)

const StringlineConfigTrafficDayRoute = StringlineConfigTrafficDayImport.update(
  {
    id: '/stringline/$config/$trafficDay',
    path: '/stringline/$config/$trafficDay',
    getParentRoute: () => rootRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/stringline/': {
      id: '/stringline/'
      path: '/stringline'
      fullPath: '/stringline'
      preLoaderRoute: typeof StringlineIndexImport
      parentRoute: typeof rootRoute
    }
    '/stringline/$config/$trafficDay': {
      id: '/stringline/$config/$trafficDay'
      path: '/stringline/$config/$trafficDay'
      fullPath: '/stringline/$config/$trafficDay'
      preLoaderRoute: typeof StringlineConfigTrafficDayImport
      parentRoute: typeof rootRoute
    }
    '/stringline/$config/today': {
      id: '/stringline/$config/today'
      path: '/stringline/$config/today'
      fullPath: '/stringline/$config/today'
      preLoaderRoute: typeof StringlineConfigTodayImport
      parentRoute: typeof rootRoute
    }
    '/stringline/$config/yesterday': {
      id: '/stringline/$config/yesterday'
      path: '/stringline/$config/yesterday'
      fullPath: '/stringline/$config/yesterday'
      preLoaderRoute: typeof StringlineConfigYesterdayImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/stringline': typeof StringlineIndexRoute
  '/stringline/$config/$trafficDay': typeof StringlineConfigTrafficDayRoute
  '/stringline/$config/today': typeof StringlineConfigTodayRoute
  '/stringline/$config/yesterday': typeof StringlineConfigYesterdayRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/stringline': typeof StringlineIndexRoute
  '/stringline/$config/$trafficDay': typeof StringlineConfigTrafficDayRoute
  '/stringline/$config/today': typeof StringlineConfigTodayRoute
  '/stringline/$config/yesterday': typeof StringlineConfigYesterdayRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/stringline/': typeof StringlineIndexRoute
  '/stringline/$config/$trafficDay': typeof StringlineConfigTrafficDayRoute
  '/stringline/$config/today': typeof StringlineConfigTodayRoute
  '/stringline/$config/yesterday': typeof StringlineConfigYesterdayRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/stringline'
    | '/stringline/$config/$trafficDay'
    | '/stringline/$config/today'
    | '/stringline/$config/yesterday'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/stringline'
    | '/stringline/$config/$trafficDay'
    | '/stringline/$config/today'
    | '/stringline/$config/yesterday'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/stringline/'
    | '/stringline/$config/$trafficDay'
    | '/stringline/$config/today'
    | '/stringline/$config/yesterday'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  StringlineIndexRoute: typeof StringlineIndexRoute
  StringlineConfigTrafficDayRoute: typeof StringlineConfigTrafficDayRoute
  StringlineConfigTodayRoute: typeof StringlineConfigTodayRoute
  StringlineConfigYesterdayRoute: typeof StringlineConfigYesterdayRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  StringlineIndexRoute: StringlineIndexRoute,
  StringlineConfigTrafficDayRoute: StringlineConfigTrafficDayRoute,
  StringlineConfigTodayRoute: StringlineConfigTodayRoute,
  StringlineConfigYesterdayRoute: StringlineConfigYesterdayRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/stringline/",
        "/stringline/$config/$trafficDay",
        "/stringline/$config/today",
        "/stringline/$config/yesterday"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/stringline/": {
      "filePath": "stringline.index.tsx"
    },
    "/stringline/$config/$trafficDay": {
      "filePath": "stringline.$config.$trafficDay.tsx"
    },
    "/stringline/$config/today": {
      "filePath": "stringline.$config.today.tsx"
    },
    "/stringline/$config/yesterday": {
      "filePath": "stringline.$config.yesterday.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
