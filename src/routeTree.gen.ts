/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HowtoRouteImport } from './routes/howto'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StringlineIndexRouteImport } from './routes/stringline.index'
import { Route as StringlineConfigYesterdayRouteImport } from './routes/stringline.$config.yesterday'
import { Route as StringlineConfigTodayRouteImport } from './routes/stringline.$config.today'
import { Route as StringlineConfigTrafficDayRouteImport } from './routes/stringline.$config.$trafficDay'

const HowtoRoute = HowtoRouteImport.update({
  id: '/howto',
  path: '/howto',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StringlineIndexRoute = StringlineIndexRouteImport.update({
  id: '/stringline/',
  path: '/stringline/',
  getParentRoute: () => rootRouteImport,
} as any)
const StringlineConfigYesterdayRoute =
  StringlineConfigYesterdayRouteImport.update({
    id: '/stringline/$config/yesterday',
    path: '/stringline/$config/yesterday',
    getParentRoute: () => rootRouteImport,
  } as any)
const StringlineConfigTodayRoute = StringlineConfigTodayRouteImport.update({
  id: '/stringline/$config/today',
  path: '/stringline/$config/today',
  getParentRoute: () => rootRouteImport,
} as any)
const StringlineConfigTrafficDayRoute =
  StringlineConfigTrafficDayRouteImport.update({
    id: '/stringline/$config/$trafficDay',
    path: '/stringline/$config/$trafficDay',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/howto': typeof HowtoRoute
  '/stringline': typeof StringlineIndexRoute
  '/stringline/$config/$trafficDay': typeof StringlineConfigTrafficDayRoute
  '/stringline/$config/today': typeof StringlineConfigTodayRoute
  '/stringline/$config/yesterday': typeof StringlineConfigYesterdayRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/howto': typeof HowtoRoute
  '/stringline': typeof StringlineIndexRoute
  '/stringline/$config/$trafficDay': typeof StringlineConfigTrafficDayRoute
  '/stringline/$config/today': typeof StringlineConfigTodayRoute
  '/stringline/$config/yesterday': typeof StringlineConfigYesterdayRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/howto': typeof HowtoRoute
  '/stringline/': typeof StringlineIndexRoute
  '/stringline/$config/$trafficDay': typeof StringlineConfigTrafficDayRoute
  '/stringline/$config/today': typeof StringlineConfigTodayRoute
  '/stringline/$config/yesterday': typeof StringlineConfigYesterdayRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/howto'
    | '/stringline'
    | '/stringline/$config/$trafficDay'
    | '/stringline/$config/today'
    | '/stringline/$config/yesterday'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/howto'
    | '/stringline'
    | '/stringline/$config/$trafficDay'
    | '/stringline/$config/today'
    | '/stringline/$config/yesterday'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/howto'
    | '/stringline/'
    | '/stringline/$config/$trafficDay'
    | '/stringline/$config/today'
    | '/stringline/$config/yesterday'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  HowtoRoute: typeof HowtoRoute
  StringlineIndexRoute: typeof StringlineIndexRoute
  StringlineConfigTrafficDayRoute: typeof StringlineConfigTrafficDayRoute
  StringlineConfigTodayRoute: typeof StringlineConfigTodayRoute
  StringlineConfigYesterdayRoute: typeof StringlineConfigYesterdayRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/howto': {
      id: '/howto'
      path: '/howto'
      fullPath: '/howto'
      preLoaderRoute: typeof HowtoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stringline/': {
      id: '/stringline/'
      path: '/stringline'
      fullPath: '/stringline'
      preLoaderRoute: typeof StringlineIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stringline/$config/yesterday': {
      id: '/stringline/$config/yesterday'
      path: '/stringline/$config/yesterday'
      fullPath: '/stringline/$config/yesterday'
      preLoaderRoute: typeof StringlineConfigYesterdayRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stringline/$config/today': {
      id: '/stringline/$config/today'
      path: '/stringline/$config/today'
      fullPath: '/stringline/$config/today'
      preLoaderRoute: typeof StringlineConfigTodayRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stringline/$config/$trafficDay': {
      id: '/stringline/$config/$trafficDay'
      path: '/stringline/$config/$trafficDay'
      fullPath: '/stringline/$config/$trafficDay'
      preLoaderRoute: typeof StringlineConfigTrafficDayRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  HowtoRoute: HowtoRoute,
  StringlineIndexRoute: StringlineIndexRoute,
  StringlineConfigTrafficDayRoute: StringlineConfigTrafficDayRoute,
  StringlineConfigTodayRoute: StringlineConfigTodayRoute,
  StringlineConfigYesterdayRoute: StringlineConfigYesterdayRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
